{"version":3,"sources":["Components/Modal/Modal.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","App.module.css","Components/Searchbar/Searchbar.module.css","Components/imagesApi.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","currentPage","get","then","response","data","hits","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","event","preventDefault","trim","alert","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGallery","pictures","map","id","Button","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","App","setPictures","setCurrentPage","setSearchQuery","isLoading","setIsLoading","showModal","setShowModal","setLargeImageURL","setTags","toggleModal","options","ImagesApi","images","length","info","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","shouldRenderLoadMoreButton","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.508bba7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__BmWUq\",\"Modal\":\"Modal_Modal__3VU9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__taMKl\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__uupxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__26mFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ZqwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__FYrsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3KzpC\",\"SearchForm\":\"Searchbar_SearchForm__2pqsR\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3HJeS\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3rGjm\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3rLwm\"};","import axios from 'axios';\r\nconst KEY = '21876236-bdbf7791a65fc64e58b34d487';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\n\r\nexport default exportObject;","import { useState } from \"react\";\r\nimport styles from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setQuery(event.currentTarget.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (query.trim() === \"\") {\r\n            return alert(\"Enter a value to search.\", {\r\n            });\r\n        }\r\n        onSubmit(query);\r\n        setQuery(\"\");\r\n    };\r\n\r\n    return (\r\n        <header className={styles.Searchbar}>\r\n            <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={styles.SearchForm_button}>\r\n                    <span className={styles.SearchForm_button_label}> Search\r\n                    </span>\r\n                </button>\r\n\r\n                <input className={styles.SearchForm_input}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={query} onChange={handleChange} />\r\n            </form>\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tags, onClick }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      onClick={() => onClick({ largeImageURL, tags })}\r\n      src={webformatURL}\r\n      alt={tags}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n);\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '..//ImageGalleryItem';\r\nimport styles from \"./ImageGallery.module.css\";\r\n\r\nconst ImageGallery = ({ pictures, onClick }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {pictures.map(({ id, tags, webformatURL, largeImageURL }) => (\r\n        < ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button type=\"button\" className={styles.Button} onClick={onClick}>\r\n        Load more\r\n    </button>\r\n);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, children }) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => window.removeEventListener('keydown', handleKeyDown);\r\n    });\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n    const handleOverlayClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={styles.Overlay} onClick={handleOverlayClick}>\r\n            <div className={styles.Modal}> {children}</div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport ImagesApi from './Components/imagesApi';\r\nimport Searchbar from './Components/Searchbar/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\nimport Button from './Components/Button/Button';\r\nimport Modal from './Components/Modal/Modal';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport styles from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [pictures, setPictures] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    fetchImages();\r\n  }, [searchQuery]);\r\n\r\n  const onChangeQuery = (query) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n    setPictures([]);\r\n  };\r\n\r\n  const onModal = ({ largeImageURL, tags }) => {\r\n    setLargeImageURL(largeImageURL);\r\n    setTags(tags);\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const fetchImages = () => {\r\n    setIsLoading(true);\r\n\r\n    const options = { searchQuery, currentPage };\r\n\r\n    ImagesApi.fetchImages(options)\r\n      .then((images) => {\r\n        if (images.length === 0) {\r\n          alert.info(\"Try again!\");\r\n        }\r\n        setPictures([...pictures, ...images]);\r\n        setCurrentPage(currentPage + 1);\r\n      })\r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        alert.info(\"Try again!\");\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = pictures.length > 0 && !isLoading;\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <Searchbar onSubmit={onChangeQuery} />\r\n      <ImageGallery pictures={pictures} onClick={onModal} />\r\n\r\n      {shouldRenderLoadMoreButton && <Button onClick={fetchImages} />}\r\n\r\n      {isLoading && (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n\r\n        />\r\n      )}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={largeImageURL} alt={tags} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}